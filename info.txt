Componentes Funcionales
-Importar react(opcional)
-Debe tener una funcion
-El nombre de la funcion debe empezar con mayusculas SIEMPRE
-La funcion debe retornar algo(siempre debe ser un solo elemento padre)
-Se debe exportar la funcion


Componentes 
-Props
-States
-Ciclo de vida
-Metodos del ciclo de vida

hooks
-Siempre comienzan con use
-Siempre se declaran dentro de un Componentes
-Son Funciones
-No se pueden declarar en condicionales(if)

Ciclo de vida de componentes y Metodos

-Montaje(Mount)
    -constructor
    -render
    -componentDidMount

-Actualizacion(Update)
    -constructor
    -render
    -componentDidUpdate

-Desmontaje(Unmount)
    -componentWillUnmount

useEffect

Con esta configuracion el useEffect se ejecuta solo en el montaje
useEffect(()=>{
    //bloque de codigo
  },[]);

Con esta configuracion el useEffect se ejecuta en el montaje y cuando detecta cambios en valores del array de dependencia
useEffect(()=>{
    //bloque de codigo
  },[valores]);

Con esta configuracion el useEffect se ejecuta en el montaje y actualizaciones
useEffect(()=>{
    //bloque de codigo
  });


XHR - Fetch(then async/await axios)

http:

A - B 
Request - Response
Cliente - Server


Request-Cliente:
  -URL
  -Metodo GET - POST - DELETE - PUT
  -Headers
  -Body
  -Version 1.1

Response-Server
  -Version
  -Headers
  -Body
  -Condigo 100-200-300-400-500

AJAX asynchronous js and xml 

fetch(url,{
  method: "POST",
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify({nombre:"Ale"})
})

fetch(url)

